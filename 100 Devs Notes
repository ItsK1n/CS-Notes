Hello,
This is my journey of learning how to become a Software Developer/Engineer.

The course I will be looking at or taking is 100 Devs by Leon Noel.

March 23, 2022
Class 01 - 100 Devs
- When it comes to getting a job as a Software Developer
  the most important factor is the networking and the way
  that you apply to jobs rather than your raw coding ability.
  So just learning to code is not enough to get a job as a
  Software Developer.

- The three important things in order to succeed:
1. Manage Frustration
2. Consistency - Spread your work load over each day for a certaint amount of hours not 10 hours in a day 1-2 hours a day is better than 10 hours for one day
3. Taking Care Of Yourself - Most people burnout so make sure you don't overwork yourself, sleep, eating right, exercise 

- Learning How to Learn
1. Active Recall - Recall the things you have just read. Stop at an end of paragraph or page and talk to yourself on what you just learned
2. Spaced Repetition

- What is a study practice tha enables me to do a quarter of the work yet yielding better results?

- What is the internet?
- A Client side device is what we use to access the internet so phones, laptops, computers and we use to consume
- A Server side device it servers different kinds of contents like HTML, Javascript, CSS

- What is full stack development?
- These guys focus on both front end and back end developer

- What is HTML5?
- It is the fifth version of HTML which introduced new features in the browser video, audio, canvas, geolocation, and websockets

- The Golden Rule
1. HTML - Content/Structure
2. CSS - Style
3. JS - Behavior/Interactions
- Keep these seperate as it is easier to read and for organization

Homework #1:
https://www.youtube.com/watch?v=ukLnPbIffxE&ab_channel=AliAbdaal
- In this video it talks about the techniques on studying and being more efficient
- Two methods would be active recall and space repetitions (This is specifically active recall)
- Ways to do these methods would be using Anki as a good source making flash cards
- Writing yourself questions instead of notes to actively use your brain to recall
- And to learn the topic close the book then take notes and see what you can put down
- These methods all work hand and hand if you still want to use normal note taking combine it so it is more efficient

https://www.youtube.com/watch?v=Z-zNHHpXoMM&ab_channel=AliAbdaal
- In this video it talks about the techniques on studying and being more efficient
- Two methods would be active recall and space repetitions (This is specifically space repetition)
- The main focus was to space out when you revist topics and a good way was using a google sheet
- You can write down a list of topics on a google sheet and then on a date review it and rate how well you did using colors
- In order to get good at topics its best to focus on quantity rather than quality as you review more topics you struggle on
- rather than focusing on one topic you already know and space repetition can be tracked using a google sheet or anki


March 24, 2022
Class 02 - 100 Devs
- HTML and CSS are not considered programing languages, these are considered markup languages

- Heading Elements (tags)
<h1> MOST IMPORTANT </h1>
<h2> .............. </h2>
<h3> .............. </h3>
<h4> .............. </h4>
<h5> .............. </h5>
<h6> .............. </h6>
There should only be one h1 technically

- Other Text Elements
<p> Paragraph </p>
<span> Short Text </span>
<pre> Preserves Whitespaces </pre> 

- Nerd Fights
<br>
<hr>

- Assisted Device Elements
<em> Stess Emphasis </em>
<strong> Strong Importance </strong>

- Ordered List
<ol>
  <li> Item 1 </li>
  <li> Item 2 </li>
</ol>

- Unordered List
<ul>
  <li> Item 1 </li>
  <li> Item 2 </li>
</ul>

- Containing Elements
<div> </div>
<section> </section>
<article> </article>
<aside> </aside>
<header> </header>
<footer> </footer>

- Deprecated Elements
<blink>
<marquee>
kinda...
<b> Bold Text </b>
<i> Italic Text </i>

